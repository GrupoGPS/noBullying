package datos;
// Generated 06-dic-2013 15:07:58 by Hibernate Tools 3.2.1.GA

import java.util.List;
import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;




/**
 * Prueba generated by hbm2java
 */
public class Prueba  implements java.io.Serializable {


     private Integer pruebaId;
     private Alerta alerta;
     private byte[] imagen;

    public Prueba() {
    }

    public Prueba(Alerta alerta, byte[] imagen) {
       this.alerta = alerta;
       this.imagen = imagen;
    }
    
    
    public Prueba(Alerta alerta) {
       this.alerta = alerta;
    }
    
   
    public Integer getPruebaId() {
        return this.pruebaId;
    }
    
    public void setPruebaId(Integer pruebaId) {
        this.pruebaId = pruebaId;
    }
    public Alerta getAlerta() {
        return this.alerta;
    }
    
    public void setAlerta(Alerta alerta) {
        this.alerta = alerta;
    }
    public byte[] getImagen() {
        return this.imagen;
    }
    
    public void setImagen(byte[] imagen) {
        this.imagen = imagen;
    }

    
     public List Listar(Alerta idAlerta) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Criteria criteria = session.createCriteria(this.getClass());
        criteria.add(Restrictions.eq("alerta", idAlerta));
        List list = criteria.list();
        return list;
    }
     
     
    public List<Prueba> ListarLogo(int idprueba) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Criteria criteria = session.createCriteria(this.getClass());
        criteria.add(Restrictions.eq("pruebaId", idprueba));
        List list = criteria.list();
        return list;
    }
     
     

         @Override
    public String toString() {
        return this.pruebaId+","+this.imagen;
    }
         
         
         
         public static Object buscar(String clase, String atributo, Object valor, boolean usarComillas) throws Exception {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();

        if (usarComillas) {
            valor = "'" + valor + "'";
        }
        Query query = session.createQuery("FROM " + clase + " AS C WHERE C." + atributo + " = " + valor);
        Object object = query.uniqueResult();
        session.close();
        return object;
    }


}


